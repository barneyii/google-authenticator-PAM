# =============================================================================
# configure default options common to google-authenticator and pam module
# =============================================================================

# Specify a custom location for the user's secret file
# In addition to "${USER}", the "secret=" option also recognizes both "~" and
# "${HOME}" as short-hands for the user's home directory.
# example:
# secret=/etc/google-authenticator/${USER}.secret
# the default value is:
# secret=~/.google_authenticator

# By default, a user can read their own secret file, which makes the PAM module
# useless for securing anything post-login. You can get around this limitation
# with the "use_helper" option, which causes code verification to be routed through
# a setuid helper (by default /usr/sbin/gauth_chktoken).
#
# use_helper
#
# You can enable the helper and specify its location at the same time with the
# "use_helper=" option:
# use_helper=/usr/sbin/gauth_chktoken

# Specify the owner of the helper utility and secret files
# If use_helper is enabled, the google-authenticator utility will chown
# secret files as helper_owner when it creates them
# helper_owner=googleauth

# =============================================================================
# configure default options for google-authenticator utility
# =============================================================================

# Set up counter-based (HOTP) verification
# counter-based

# Set up time-based (TOTP) verification
# time-based

# Disallow reuse of previously used TOTP tokens
# disallow-reuse

# Allow reuse of previously used TOTP tokens
# allow-reuse

# Write file without first confirming with user
# force

# Override the default label in "otpauth://" URL
# label=<label>

# Quiet mode
# quiet

# display style for QR code
# qr-mode={NONE,ANSI,UTF8}
# qr-mode=ANSI

# Limit logins to N per every M seconds
# rate-limit=3

# Limit logins to N per every M seconds
# rate-time=30

# Disable rate-limiting
# no-rate-limit

# Set window of concurrently valid codes
# window-size=17

# Disable window of concurrently valid codes
# minimal-window


# =============================================================================
# configure default options for pam_google_authenticator module
# =============================================================================

# When using the "secret=" option, you might want to also set the "user="
# option. The latter forces the PAM module to switch to a dedicated hard-coded
# user id prior to doing any file operations. When using the "user=" option, you
# must not include "~" or "${HOME}" in the filename.
#
# The "user=" option can also be useful if you want to authenticate users who do
# not have traditional UNIX accounts on your system.
# examples:
# user=google_auth
# user=0

# The "pam_google_authenticator" module supports both the standard
# "use_first_pass" and "try_first_pass" options. But most users would not need
# to set those on the "pam_google_authenticator".
# NOTE: if the "try_first_pass" option is used in conjunction with "use_helper",
# the number of attempts the user will be given will be effectively halved.
# You should adjust the "rate-limit" option in the google-authenticator utility
# with this in mind.
#
# try_first_pass
# use_first_pass

# Some PAM clients cannot prompt the user for more than just the password. To
# work around this problem, this PAM module supports stacking. If you pass the
# "forward_pass" option, the "pam_google_authenticator" module queries the user
# for both the system password and the verification code in a single prompt.
# It then forwards the system password to the next PAM module, which will have
# to be configured with the "use_first_pass" option.
#
# forward_pass

# If you discover that your TOTP code never works, this is most commonly the
# result of the clock on your server being different from the one on your Android
# device. The PAM module makes an attempt to compensate for time skew. You can
# teach it about the amount of skew that you are experiencing, by trying to log
# it three times in a row. Make sure, you always wait 30s (but not longer), so
# that you get three distinct TOTP codes.
#
# Some administrators prefer that time skew isn't adjusted automatically, as
# doing so results in a slightly less secure system configuration. If you want
# to disable it, you can do so with the following option:
#
# noskewadj

# During the initial roll-out process, you might find that not all users have
# created a secret key, yet. If you would still like them to be able to log
# in, you can use the "nullok" option:
#
# nullok

# By default, the PAM module does not echo the verification code when it is
# entered by the user. In some situations, the administrator might prefer a
# different behavior. Pass the "echo_verification_code" option to the module
# in order to enable echoing.
#
# echo_verification_code

